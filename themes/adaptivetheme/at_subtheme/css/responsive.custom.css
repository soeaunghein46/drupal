#block-system-main-menu ul li {
  display: inline-block;
  width: 240px;
  font-size: 1.4em;
  background-color: #cfcfcf;
  height: 40px;
  text-align: center;
}

#block-system-main-menu .expanded{
  font-size: 1.2em;
}
.views-slideshow-cycle-processed {
  margin-top: 30px;
}
.pane-title {
  text-align: center;
  color: #ffb200  ;
  font-size: 35px;
  font-style: bold;
  margin-top: horizontal-line;
  margin-top: 20px;

}

#logo, #name-and-slogan {
  display: inline-block;
}

#block-block-7, #block-block-8, #block-locale-language {
  display: inline-block;
  font-size: 1.2em;
  text-align: center;
}

#block-locale-language ul li{
  display: inline-block;
  width: 100px;
  background-color: #d7ff9c  ;
  text-align: center;
}

.views-field-field-feature-box-link {
  font-size: 2em;
}
.view-events .views-row {
  display: inline-block;
  width: 32%;
  margin-right: 10px; 
}
.view-events {
  margin-top: 20px;
}

.view-partner .views-row {
  display: inline-block;
  width: 35%;
  margin-right: 10px;
  margin-top: 10px;
}
.view-partner {
  margin-top: 20px;
}
.view-publication {
  margin-top: 20px;
}
.region.region-header {
  margin-left: 620px;
}
#block-block-4, #block-block-5, #block-block-6 {
  display: inline-block;
  width: 32%;
  text-align: center;
  margin-top: 30px;
}
.region-tertiary-content {
  background-color: #c5c5c5;
}
.region-footer {
  background-color:  #808080 ;
}

.view-front-page-publication-slideshow {
  margin-top: 20px;
}
.view-all-events .views-row {
  display: inline-block;
  width: 33%;
  margin-top: 30px;
}
/*
 * responsive.custom.css is for custom media queries that are not set via the
 * theme settings, such as cascading media queries.
 *
 * By default all the other responsive stylesheets used in Adaptivetheme use a
 * "stacking method", however cascading media queries use a waterfall method so
 * you can leverage the cascade and inheritance for all browsers that support
 * media queries, regardless of screen size.
 *
 * @SEE http://zomigi.com/blog/essential-considerations-for-crafting-quality-media-queries/#mq-overlap-stack
 *
 * NOTE: this file loads by default, to disable got to your theme settings and
 * look under the "CSS" settings tab.
 */
/*
 * Really small screens and up
 */
/* @media only screen and (min-width: 220px) {} */
/*
 * Smalltouch sizes and up
 */
/* @media only screen and (min-width: 320px) {} */
/*
 * Smalltouch sizes and down
 */
@media only screen and (max-width: 480px) {
  /* 
   * Float Region Blocks - custom media query CSS example:
   * 
   * Float regions blocks is an Extension you can enable in the appearance
   * settings for your theme. This feature allows you to automatically float
   * blocks in regions, you can switch it on and off depending on your
   * requirements. For design purposes you many want to remove the floats for
   * devices where the entire theme is just one column - for example small
   * mobile phones. The following CSS is inside the custom media query:
   *
   *   @media only screen and (max-width: 480px){}
   *
   * This will target devices with a maximum width of 480px - most small phones.
   * In these smaller screen sizes we can remove the float and widths so all
   * blocks stack instead of displaying horizonally. The selector used is an
   * "attribute selector" which will match on any float block class. Use your
   * inspector or Firebug to get the classes from the page output if you need
   * more granular control over block alignment and stacking.
   */
  /* line 57, ../sass/responsive.custom.scss */
  .region[class*="float-blocks"] .block {
    float: none;
    width: 100%;
  }
}
/*
 * Tablet sizes and up
 */
/* @media only screen and (min-width: 768px) {} */
/*
 * Desktops/laptops and up
 */
/* @media only screen and (min-width: 1025px) {} */

/*# sourceMappingURL=responsive.custom.css.map */
